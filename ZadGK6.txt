
import com.jogamp.opengl.GL2;
import com.jogamp.opengl.GLAutoDrawable;
import com.jogamp.opengl.GLCapabilities;
import com.jogamp.opengl.GLEventListener;
import com.jogamp.opengl.GLProfile;
import com.jogamp.opengl.awt.GLJPanel;
import com.jogamp.opengl.glu.GLU;
import com.jogamp.opengl.util.gl2.GLUT;
import java.awt.Dimension;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.JFrame;


class Lab6 extends GLJPanel implements GLEventListener {
    private double rotateY = 0.0D;
    private static final float[][] materials = new float[][]{{0.0215F, 0.1745F, 0.0215F, 1.0F, 0.07568F, 0.61424F, 0.07568F, 1.0F, 0.633F, 0.727811F, 0.633F, 1.0F, 76.8F}, {0.135F, 0.2225F, 0.1575F, 1.0F, 0.54F, 0.89F, 0.63F, 1.0F, 0.316228F, 0.316228F, 0.316228F, 1.0F, 12.8F}, {0.05375F, 0.05F, 0.06625F, 1.0F, 0.18275F, 0.17F, 0.22525F, 1.0F, 0.332741F, 0.328634F, 0.346435F, 1.0F, 38.4F}, {0.25F, 0.20725F, 0.20725F, 1.0F, 1.0F, 0.829F, 0.829F, 1.0F, 0.296648F, 0.296648F, 0.296648F, 1.0F, 11.264F}, {0.1745F, 0.01175F, 0.01175F, 1.0F, 0.61424F, 0.04136F, 0.04136F, 1.0F, 0.727811F, 0.626959F, 0.626959F, 1.0F, 76.8F}, {0.1F, 0.18725F, 0.1745F, 1.0F, 0.396F, 0.74151F, 0.69102F, 1.0F, 0.297254F, 0.30829F, 0.306678F, 1.0F, 12.8F}, {0.329412F, 0.223529F, 0.027451F, 1.0F, 0.780392F, 0.568627F, 0.113725F, 1.0F, 0.992157F, 0.941176F, 0.807843F, 1.0F, 27.897436F}, {0.2125F, 0.1275F, 0.054F, 1.0F, 0.714F, 0.4284F, 0.18144F, 1.0F, 0.393548F, 0.271906F, 0.166721F, 1.0F, 25.6F}, {0.25F, 0.25F, 0.25F, 1.0F, 0.4F, 0.4F, 0.4F, 1.0F, 0.774597F, 0.774597F, 0.774597F, 1.0F, 76.8F}, {0.19125F, 0.0735F, 0.0225F, 1.0F, 0.7038F, 0.27048F, 0.0828F, 1.0F, 0.256777F, 0.137622F, 0.086014F, 1.0F, 12.8F}, {0.24725F, 0.1995F, 0.0745F, 1.0F, 0.75164F, 0.60648F, 0.22648F, 1.0F, 0.628281F, 0.555802F, 0.366065F, 1.0F, 51.2F}, {0.19225F, 0.19225F, 0.19225F, 1.0F, 0.50754F, 0.50754F, 0.50754F, 1.0F, 0.508273F, 0.508273F, 0.508273F, 1.0F, 51.2F}, {0.0F, 0.1F, 0.06F, 1.0F, 0.0F, 0.5098039F, 0.5098039F, 1.0F, 0.50196075F, 0.50196075F, 0.50196075F, 1.0F, 32.0F}, {0.0F, 0.0F, 0.0F, 1.0F, 0.1F, 0.35F, 0.1F, 1.0F, 0.45F, 0.55F, 0.45F, 1.0F, 32.0F}, {0.0F, 0.0F, 0.0F, 1.0F, 0.5F, 0.0F, 0.0F, 1.0F, 0.7F, 0.6F, 0.6F, 1.0F, 32.0F}, {0.0F, 0.05F, 0.05F, 1.0F, 0.4F, 0.5F, 0.5F, 1.0F, 0.04F, 0.7F, 0.7F, 1.0F, 10.0F}, {0.0F, 0.05F, 0.0F, 1.0F, 0.4F, 0.5F, 0.4F, 1.0F, 0.04F, 0.7F, 0.04F, 1.0F, 10.0F}, {0.05F, 0.0F, 0.0F, 1.0F, 0.5F, 0.4F, 0.4F, 1.0F, 0.7F, 0.04F, 0.04F, 1.0F, 10.0F}};
    private GLUT glut = new GLUT();
    private GLU glu = new GLU();
    private double radius = 5.0D;
    private double angle = 0.0D;
    private float x = 0.0F;
    private float z = 0.0F;

    public static void main(String[] args) {
        JFrame window = new JFrame("Stage");
        Lab6 panel = new Lab6();
        window.setContentPane(panel);
        window.pack();
        window.setResizable(false);
        window.setLocation(50, 50);
        window.setDefaultCloseOperation(3);
        window.setVisible(true);
    }

    public Lab6() {
        super(new GLCapabilities((GLProfile)null));
        this.setPreferredSize(new Dimension(1000, 500));
        this.addGLEventListener(this);
        Lab6.MouseHandler mouser = new Lab6.MouseHandler((Lab6.MouseHandler)null);
        this.addMouseListener(mouser);
    }

    public void display(GLAutoDrawable drawable) {
        GL2 gl2 = drawable.getGL().getGL2();
        gl2.glClear(16640);
        gl2.glLoadIdentity();
        this.glu.gluLookAt(0.0F, 8.0F, 40.0F, 0.0F, 1.0F, 0.0F, 0.0F, 1.0F, 0.0F);
        gl2.glRotated(this.rotateY, 0.0D, 1.0D, 0.0D);
        float[] gray = new float[]{0.6F, 0.6F, 0.6F, 1.0F};
        float[] zero = new float[]{0.0F, 0.0F, 0.0F, 1.0F};
        gl2.glMaterialfv(1032, 5634, gray, 0);
        gl2.glMaterialfv(1032, 4610, zero, 0);
        gl2.glPushMatrix();
        gl2.glTranslated(0.0D, -1.5D, 0.0D);
        gl2.glScaled(1.0D, 0.05D, 1.0D);
        this.glut.glutSolidCube(20.0F);
        gl2.glPopMatrix();
        this.PyramidBaseOnCircle(gl2, 8, materials[0]);
    }

    public void PyramidBaseOnCircle(GL2 gl2, int numVertices, float[] materials) {
        double angleIncrement = 6.283185307179586D / (double)numVertices;
        this.angle = 0.0D;
        float[] white = new float[]{0.4F, 0.4F, 0.4F, 1.0F};
        float[] gold = new  float[]{0.24F, 0.19F, 0.07F, 1.0F, 
        		0,75164, 0,60648, 0,22648, 1,0,
        		0,628281, 0,555802, 0,366065, 1,0, 
        		50,0};

        for(int i = 1; i <= numVertices; ++i) {
            gl2.glBegin(9);
            this.x = (float)(this.radius * Math.cos(this.angle));
            this.z = (float)(this.radius * Math.sin(this.angle));
            gl2.glMaterialfv(1028, 5634, materials, 1);
            gl2.glMaterialfv(1028, 4610, gold, 1);
            gl2.glMaterialf(1028, 5633, 64.0F);
            gl2.glVertex3f(this.x, -2.0F, this.z);
            gl2.glMaterialfv(1028, 5634, materials, 2);
            gl2.glMaterialfv(1028, 4610, gold, 2);
            gl2.glMaterialf(1028, 5633, 64.0F);
            gl2.glVertex3f(0.0F, 7.0F, 0.0F);
            this.angle = (double)i * angleIncrement;
            gl2.glMaterialfv(1028, 5634, materials, 3);
            gl2.glMaterialfv(1028, 4610, gold, 3);
            gl2.glMaterialf(1028, 5633, 64.0F);
            gl2.glVertex3f((float)(this.radius * Math.cos(this.angle)), -2.0F, (float)(this.radius * Math.sin(this.angle)));
            gl2.glEnd();
        }

    }

    public void init(GLAutoDrawable drawable) {
        GL2 gl2 = drawable.getGL().getGL2();
        gl2.glMatrixMode(5889);
        gl2.glLoadIdentity();
        this.glu.gluPerspective(20.0D, (double)this.getWidth() / (double)this.getHeight(), 1.0D, 100.0D);
        gl2.glMatrixMode(5888);
        gl2.glEnable(2929);
        gl2.glEnable(2977);
        gl2.glEnable(2896);
        gl2.glEnable(16384);
        float[] ambientLevel = new float[]{0.8F, 0.8F, 0.8F, 1.0F};
        gl2.glLightModeli(2898, 1);
        gl2.glLightModelfv(2899, ambientLevel, 0);
    }

    public void dispose(GLAutoDrawable drawable) {
    }

    public void reshape(GLAutoDrawable drawable, int x, int y, int width, int height) {
    }

    private class MouseHandler extends MouseAdapter {
        private int prevX;
        private boolean dragging;

        private MouseHandler(MouseHandler mouseHandler) {
        }

        public void mouseDragged(MouseEvent evt) {
            if (this.dragging) {
                int x = evt.getX();
                double dx = (double)(x - this.prevX);
                Lab6 var10000 = Lab6.this;
                var10000.rotateY = var10000.rotateY + dx / 7.0D;
                Lab6.this.repaint();
                this.prevX = x;
            }

        }

        public void mousePressed(MouseEvent evt) {
            if (!this.dragging) {
                this.prevX = evt.getX();
                this.dragging = true;
                Lab6.this.addMouseMotionListener(this);
            }
        }

        public void mouseReleased(MouseEvent evt) {
            this.dragging = false;
            Lab6.this.removeMouseMotionListener(this);
        }
    }
}
